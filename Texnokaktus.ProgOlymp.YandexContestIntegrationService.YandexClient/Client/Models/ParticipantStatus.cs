// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ParticipantStatus : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The contestDuration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContestDuration { get; set; }
#nullable restore
#else
        public string ContestDuration { get; set; }
#endif
        /// <summary>Contest finish time, UTC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContestFinishTime { get; set; }
#nullable restore
#else
        public string ContestFinishTime { get; set; }
#endif
        /// <summary>The contestInfinite property</summary>
        public bool? ContestInfinite { get; set; }
        /// <summary>Contest start time, UTC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContestStartTime { get; set; }
#nullable restore
#else
        public string ContestStartTime { get; set; }
#endif
        /// <summary>The contestState property</summary>
        public global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus_contestState? ContestState { get; set; }
        /// <summary>Participant finish time, UTC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParticipantFinishTime { get; set; }
#nullable restore
#else
        public string ParticipantFinishTime { get; set; }
#endif
        /// <summary>Deprecated. Switch to `participantLeftTimeMillis`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParticipantLeftTime { get; set; }
#nullable restore
#else
        public string ParticipantLeftTime { get; set; }
#endif
        /// <summary>The participantLeftTimeMillis property</summary>
        public long? ParticipantLeftTimeMillis { get; set; }
        /// <summary>The participantName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParticipantName { get; set; }
#nullable restore
#else
        public string ParticipantName { get; set; }
#endif
        /// <summary>Participant start time, UTC</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParticipantStartTime { get; set; }
#nullable restore
#else
        public string ParticipantStartTime { get; set; }
#endif
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Roles { get; set; }
#nullable restore
#else
        public List<string> Roles { get; set; }
#endif
        /// <summary>This property is `null` unless contestant is participating in a team.</summary>
        public long? TeamId { get; set; }
        /// <summary>The upsolvingAllowed property</summary>
        public bool? UpsolvingAllowed { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus"/> and sets the default values.
        /// </summary>
        public ParticipantStatus()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contestDuration", n => { ContestDuration = n.GetStringValue(); } },
                { "contestFinishTime", n => { ContestFinishTime = n.GetStringValue(); } },
                { "contestInfinite", n => { ContestInfinite = n.GetBoolValue(); } },
                { "contestStartTime", n => { ContestStartTime = n.GetStringValue(); } },
                { "contestState", n => { ContestState = n.GetEnumValue<global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus_contestState>(); } },
                { "participantFinishTime", n => { ParticipantFinishTime = n.GetStringValue(); } },
                { "participantLeftTime", n => { ParticipantLeftTime = n.GetStringValue(); } },
                { "participantLeftTimeMillis", n => { ParticipantLeftTimeMillis = n.GetLongValue(); } },
                { "participantName", n => { ParticipantName = n.GetStringValue(); } },
                { "participantStartTime", n => { ParticipantStartTime = n.GetStringValue(); } },
                { "roles", n => { Roles = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "teamId", n => { TeamId = n.GetLongValue(); } },
                { "upsolvingAllowed", n => { UpsolvingAllowed = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("contestDuration", ContestDuration);
            writer.WriteStringValue("contestFinishTime", ContestFinishTime);
            writer.WriteBoolValue("contestInfinite", ContestInfinite);
            writer.WriteStringValue("contestStartTime", ContestStartTime);
            writer.WriteEnumValue<global::Texnokaktus.ProgOlymp.YandexContestIntegrationService.Client.Models.ParticipantStatus_contestState>("contestState", ContestState);
            writer.WriteStringValue("participantFinishTime", ParticipantFinishTime);
            writer.WriteStringValue("participantLeftTime", ParticipantLeftTime);
            writer.WriteLongValue("participantLeftTimeMillis", ParticipantLeftTimeMillis);
            writer.WriteStringValue("participantName", ParticipantName);
            writer.WriteStringValue("participantStartTime", ParticipantStartTime);
            writer.WriteCollectionOfPrimitiveValues<string>("roles", Roles);
            writer.WriteLongValue("teamId", TeamId);
            writer.WriteBoolValue("upsolvingAllowed", UpsolvingAllowed);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
